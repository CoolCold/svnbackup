#!/bin/bash
#
# svnbackupd        Startup script for the Subversion svnbackupd daemon
#
# chkconfig: - 85 15
# description: The svnbackupd daemon allows access to Subversion repositories \
#              using the svn network protocol.
# processname: svnbackupd
# config: /etc/sysconfig/svnbackupd
# pidfile: /var/run/svnbackupd.pid
#
### BEGIN INIT INFO
# Provides: svnbackupd
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Short-Description: start and stop the svnbackupd daemon
# Description: The svnbackupd daemon allows access to Subversion
#   repositories using the svn network protocol.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

if [ -f /etc/sysconfig/svnbackupd ]; then
        . /etc/sysconfig/svnbackupd
fi

exec=/usr/bin/svnserve
prog=svnbackupd
duser=${DUSER-svnbackup}
pidfile=${PIDFILE-/var/run/svnbackupd.pid}
lockfile=${LOCKFILE-/var/lock/subsys/svnbackupd}
args="--pid-file=${pidfile} $OPTIONS"
#[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

#lockfile=/var/lock/subsys/$prog

start() {
    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6
    touch $pidfile
    chown $duser:$duser $pidfile
    echo -n $"Starting $prog: "
    daemon --pidfile=${pidfile} --user=svnbackup $exec $args
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p ${pidfile} $exec
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status -p ${pidfile} $exec
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
